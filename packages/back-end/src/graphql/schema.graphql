### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Courrier {
  id: String!
  name: String
}

input CourrierCreateInput {
  id: String!
  name: String
}

input CourrierOrderByInput {
  id: SortOrder
  name: SortOrder
}

input CourrierUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input CourrierUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input CourrierWhereInput {
  AND: [CourrierWhereInput!]
  NOT: [CourrierWhereInput!]
  OR: [CourrierWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input CourrierWhereUniqueInput {
  id: String
}

type Extension {
  description: String
  group: Group
  id: Int!
  name: String
}

input ExtensionCreateInput {
  description: String
  group: GroupCreateNestedOneWithoutExtensionsInput
  name: String
}

input ExtensionCreateManyGroupInput {
  description: String
  id: Int
  name: String
}

input ExtensionCreateManyGroupInputEnvelope {
  data: [ExtensionCreateManyGroupInput!]
  skipDuplicates: Boolean
}

input ExtensionCreateNestedManyWithoutGroupInput {
  connect: [ExtensionWhereUniqueInput!]
  connectOrCreate: [ExtensionCreateOrConnectWithoutGroupInput!]
  create: [ExtensionCreateWithoutGroupInput!]
  createMany: ExtensionCreateManyGroupInputEnvelope
}

input ExtensionCreateOrConnectWithoutGroupInput {
  create: ExtensionCreateWithoutGroupInput!
  where: ExtensionWhereUniqueInput!
}

input ExtensionCreateWithoutGroupInput {
  description: String
  name: String
}

input ExtensionListRelationFilter {
  every: ExtensionWhereInput
  none: ExtensionWhereInput
  some: ExtensionWhereInput
}

input ExtensionOrderByInput {
  description: SortOrder
  group_id: SortOrder
  id: SortOrder
  name: SortOrder
}

input ExtensionScalarWhereInput {
  AND: [ExtensionScalarWhereInput!]
  NOT: [ExtensionScalarWhereInput!]
  OR: [ExtensionScalarWhereInput!]
  description: StringNullableFilter
  group_id: IntNullableFilter
  id: IntFilter
  name: StringNullableFilter
}

input ExtensionUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  group: GroupUpdateOneWithoutExtensionsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ExtensionUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ExtensionUpdateManyWithWhereWithoutGroupInput {
  data: ExtensionUpdateManyMutationInput!
  where: ExtensionScalarWhereInput!
}

input ExtensionUpdateManyWithoutGroupInput {
  connect: [ExtensionWhereUniqueInput!]
  connectOrCreate: [ExtensionCreateOrConnectWithoutGroupInput!]
  create: [ExtensionCreateWithoutGroupInput!]
  createMany: ExtensionCreateManyGroupInputEnvelope
  delete: [ExtensionWhereUniqueInput!]
  deleteMany: [ExtensionScalarWhereInput!]
  disconnect: [ExtensionWhereUniqueInput!]
  set: [ExtensionWhereUniqueInput!]
  update: [ExtensionUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [ExtensionUpdateManyWithWhereWithoutGroupInput!]
  upsert: [ExtensionUpsertWithWhereUniqueWithoutGroupInput!]
}

input ExtensionUpdateWithWhereUniqueWithoutGroupInput {
  data: ExtensionUpdateWithoutGroupInput!
  where: ExtensionWhereUniqueInput!
}

input ExtensionUpdateWithoutGroupInput {
  description: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ExtensionUpsertWithWhereUniqueWithoutGroupInput {
  create: ExtensionCreateWithoutGroupInput!
  update: ExtensionUpdateWithoutGroupInput!
  where: ExtensionWhereUniqueInput!
}

input ExtensionWhereInput {
  AND: [ExtensionWhereInput!]
  NOT: [ExtensionWhereInput!]
  OR: [ExtensionWhereInput!]
  description: StringNullableFilter
  group: GroupWhereInput
  group_id: IntNullableFilter
  id: IntFilter
  name: StringNullableFilter
}

input ExtensionWhereUniqueInput {
  id: Int
}

type Group {
  display: Boolean!
  extensions(after: ExtensionWhereUniqueInput, before: ExtensionWhereUniqueInput, first: Int, last: Int, orderBy: [GroupExtensionsOrderByInput!]): [Extension!]!
  id: Int!
  name: String
  size: Int!
  upload: Boolean!
}

input GroupCreateInput {
  display: Boolean
  extensions: ExtensionCreateNestedManyWithoutGroupInput
  name: String
  size: Int
  upload: Boolean
}

input GroupCreateNestedOneWithoutExtensionsInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutExtensionsInput
  create: GroupCreateWithoutExtensionsInput
}

input GroupCreateOrConnectWithoutExtensionsInput {
  create: GroupCreateWithoutExtensionsInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutExtensionsInput {
  display: Boolean
  name: String
  size: Int
  upload: Boolean
}

input GroupExtensionsOrderByInput {
  id: SortOrder
  name: SortOrder
}

input GroupOrderByInput {
  display: SortOrder
  id: SortOrder
  name: SortOrder
  size: SortOrder
  upload: SortOrder
}

input GroupUpdateInput {
  display: BoolFieldUpdateOperationsInput
  extensions: ExtensionUpdateManyWithoutGroupInput
  name: NullableStringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
  upload: BoolFieldUpdateOperationsInput
}

input GroupUpdateManyMutationInput {
  display: BoolFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
  upload: BoolFieldUpdateOperationsInput
}

input GroupUpdateOneWithoutExtensionsInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutExtensionsInput
  create: GroupCreateWithoutExtensionsInput
  delete: Boolean
  disconnect: Boolean
  update: GroupUpdateWithoutExtensionsInput
  upsert: GroupUpsertWithoutExtensionsInput
}

input GroupUpdateWithoutExtensionsInput {
  display: BoolFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
  upload: BoolFieldUpdateOperationsInput
}

input GroupUpsertWithoutExtensionsInput {
  create: GroupCreateWithoutExtensionsInput!
  update: GroupUpdateWithoutExtensionsInput!
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  display: BoolFilter
  extensions: ExtensionListRelationFilter
  id: IntFilter
  name: StringNullableFilter
  size: IntFilter
  upload: BoolFilter
}

input GroupWhereUniqueInput {
  id: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createOneCourrier(data: CourrierCreateInput!): Courrier!
  createOneExtension(data: ExtensionCreateInput!): Extension!
  createOneGroup(data: GroupCreateInput!): Group!
  deleteManyCourrier(where: CourrierWhereInput): AffectedRowsOutput!
  deleteManyExtension(where: ExtensionWhereInput): AffectedRowsOutput!
  deleteManyGroup(where: GroupWhereInput): AffectedRowsOutput!
  deleteOneCourrier(where: CourrierWhereUniqueInput!): Courrier
  deleteOneExtension(where: ExtensionWhereUniqueInput!): Extension
  deleteOneGroup(where: GroupWhereUniqueInput!): Group
  updateManyCourrier(data: CourrierUpdateManyMutationInput!, where: CourrierWhereInput): AffectedRowsOutput!
  updateManyExtension(data: ExtensionUpdateManyMutationInput!, where: ExtensionWhereInput): AffectedRowsOutput!
  updateManyGroup(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): AffectedRowsOutput!
  updateOneCourrier(data: CourrierUpdateInput!, where: CourrierWhereUniqueInput!): Courrier
  updateOneExtension(data: ExtensionUpdateInput!, where: ExtensionWhereUniqueInput!): Extension
  updateOneGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group
  upsertOneCourrier(create: CourrierCreateInput!, update: CourrierUpdateInput!, where: CourrierWhereUniqueInput!): Courrier!
  upsertOneExtension(create: ExtensionCreateInput!, update: ExtensionUpdateInput!, where: ExtensionWhereUniqueInput!): Extension!
  upsertOneGroup(create: GroupCreateInput!, update: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  courrier(where: CourrierWhereUniqueInput!): Courrier
  courriers(after: CourrierWhereUniqueInput, before: CourrierWhereUniqueInput, first: Int, last: Int, orderBy: [CourrierOrderByInput!], where: CourrierWhereInput): [Courrier!]!
  extension(where: ExtensionWhereUniqueInput!): Extension
  extensions(after: ExtensionWhereUniqueInput, before: ExtensionWhereUniqueInput, first: Int, last: Int, orderBy: [ExtensionOrderByInput!], where: ExtensionWhereInput): [Extension!]!
  group(where: GroupWhereUniqueInput!): Group
  groups(after: GroupWhereUniqueInput, before: GroupWhereUniqueInput, first: Int, last: Int, orderBy: [GroupOrderByInput!], where: GroupWhereInput): [Group!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}
